!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASSERT_STATE	dhclient.c	68;"	d	file:
CHK_TIM_ALLOC_FAILURE	dhc6.c	1469;"	d	file:
CHK_TIM_MRC_EXCEEDED	dhc6.c	1467;"	d	file:
CHK_TIM_MRD_EXCEEDED	dhc6.c	1468;"	d	file:
CHK_TIM_SUCCESS	dhc6.c	1466;"	d	file:
DHCPv6DestAddr	dhc6.c	/^struct sockaddr_in6 DHCPv6DestAddr;$/;"	v	typeref:struct:sockaddr_in6
NUM_DEFAULT_REQUESTED_OPTS	clparse.c	40;"	d	file:
active_prefix	dhc6.c	/^active_prefix(struct client_state *client)$/;"	f	file:
add_reject	dhclient.c	/^add_reject(struct packet *packet) {$/;"	f	file:
arr	dhclient.c	/^static const char arr [] = "All rights reserved.";$/;"	v	file:
bind_lease	dhclient.c	/^void bind_lease (client)$/;"	f
bootp	dhclient.c	/^void bootp (packet)$/;"	f
bound_handler	dhc6.c	/^bound_handler(struct packet *packet, struct client_state *client)$/;"	f
check_collection	dhclient.c	/^int check_collection (packet, lease, collection)$/;"	f
check_domain_name	dhclient.c	/^static int check_domain_name(const char *ptr, size_t len, int dots)$/;"	f	file:
check_domain_name_list	dhclient.c	/^static int check_domain_name_list(const char *ptr, size_t len, int dots)$/;"	f	file:
check_option_values	dhclient.c	/^static int check_option_values(struct universe *universe,$/;"	f	file:
check_timing6	dhc6.c	/^check_timing6 (struct client_state *client, u_int8_t msg_type, $/;"	f
classify	dhclient.c	/^void classify (packet, class)$/;"	f
client_dns_remove	dhclient.c	/^client_dns_remove(struct client_state *client,$/;"	f
client_dns_remove_action	dhclient.c	/^client_dns_remove_action(dhcp_ddns_cb_t *ddns_cb,$/;"	f
client_dns_update	dhclient.c	/^client_dns_update(struct client_state *client, dhcp_ddns_cb_t *ddns_cb)$/;"	f
client_dns_update_action	dhclient.c	/^client_dns_update_action(dhcp_ddns_cb_t *ddns_cb,$/;"	f
client_dns_update_timeout	dhclient.c	/^client_dns_update_timeout (void *cp)$/;"	f
client_env	dhclient.c	/^struct string_list *client_env = NULL;$/;"	v	typeref:struct:string_list
client_env_count	dhclient.c	/^int client_env_count = 0;$/;"	v
client_envadd	dhclient.c	/^void client_envadd (struct client_state *client,$/;"	f
client_location_changed	dhclient.c	/^void client_location_changed ()$/;"	f
client_option_envadd	dhclient.c	/^void client_option_envadd (struct option_cache *oc,$/;"	f
clientid_option	dhc6.c	/^struct option *clientid_option = NULL;$/;"	v	typeref:struct:option
commit_leases	dhclient.c	/^int commit_leases ()$/;"	f
commit_resolv_conf	scripts/macos	/^commit_resolv_conf() {$/;"	f
cons_agent_information_options	dhclient.c	/^unsigned cons_agent_information_options (cfg_options, outpacket,$/;"	f
copyright	dhclient.c	/^static const char copyright[] =$/;"	v	file:
db_startup	dhclient.c	/^void db_startup (testp)$/;"	f
default_duid	dhclient.c	/^struct data_string default_duid;$/;"	v	typeref:struct:data_string
default_lease_time	dhclient.c	/^TIME default_lease_time = 43200; \/* 12 hours... *\/$/;"	v
default_requested_options	clparse.c	/^struct option *default_requested_options[NUM_DEFAULT_REQUESTED_OPTS + 1];$/;"	v	typeref:struct:option
destroy_client_lease	dhclient.c	/^void destroy_client_lease (lease)$/;"	f
dhc6_add_ia_na	dhc6.c	/^dhc6_add_ia_na(struct client_state *client, struct data_string *packet,$/;"	f	file:
dhc6_add_ia_pd	dhc6.c	/^dhc6_add_ia_pd(struct client_state *client, struct data_string *packet,$/;"	f	file:
dhc6_add_ia_ta	dhc6.c	/^dhc6_add_ia_ta(struct client_state *client, struct data_string *packet,$/;"	f	file:
dhc6_best_lease	dhc6.c	/^dhc6_best_lease(struct client_state *client, struct dhc6_lease **head)$/;"	f	file:
dhc6_check_advertise	dhc6.c	/^dhc6_check_advertise(struct dhc6_lease *lease)$/;"	f	file:
dhc6_check_irt	dhc6.c	/^dhc6_check_irt(struct client_state *client)$/;"	f	file:
dhc6_check_reply	dhc6.c	/^dhc6_check_reply(struct client_state *client, struct dhc6_lease *new)$/;"	f	file:
dhc6_check_status	dhc6.c	/^dhc6_check_status(isc_result_t rval, struct option_state *options,$/;"	f	file:
dhc6_check_times	dhc6.c	/^dhc6_check_times(struct client_state *client)$/;"	f	file:
dhc6_dup_addr	dhc6.c	/^dhc6_dup_addr(struct dhc6_addr *addr, const char *file, int line)$/;"	f	file:
dhc6_dup_ia	dhc6.c	/^dhc6_dup_ia(struct dhc6_ia *ia, const char *file, int line)$/;"	f	file:
dhc6_dup_lease	dhc6.c	/^dhc6_dup_lease(struct dhc6_lease *lease, const char *file, int line)$/;"	f	file:
dhc6_get_status_code	dhc6.c	/^dhc6_get_status_code(struct option_state *options, unsigned *code,$/;"	f	file:
dhc6_ia_destroy	dhc6.c	/^dhc6_ia_destroy(struct dhc6_ia **src, const char *file, int line)$/;"	f	file:
dhc6_init_action	dhc6.c	/^dhc6_init_action(struct client_state *client, isc_result_t *rvalp,$/;"	f	file:
dhc6_lease_destroy	dhc6.c	/^dhc6_lease_destroy(struct dhc6_lease **src, const char *file, int line)$/;"	f
dhc6_leaseify	dhc6.c	/^dhc6_leaseify(struct packet *packet)$/;"	f	file:
dhc6_marshall_values	dhc6.c	/^dhc6_marshall_values(const char *prefix, struct client_state *client,$/;"	f	file:
dhc6_merge_lease	dhc6.c	/^dhc6_merge_lease(struct dhc6_lease *src, struct dhc6_lease *dst)$/;"	f	file:
dhc6_parse_addrs	dhc6.c	/^dhc6_parse_addrs(struct dhc6_addr **paddr, struct packet *packet,$/;"	f	file:
dhc6_parse_ia_na	dhc6.c	/^dhc6_parse_ia_na(struct dhc6_ia **pia, struct packet *packet,$/;"	f	file:
dhc6_parse_ia_pd	dhc6.c	/^dhc6_parse_ia_pd(struct dhc6_ia **pia, struct packet *packet,$/;"	f	file:
dhc6_parse_ia_ta	dhc6.c	/^dhc6_parse_ia_ta(struct dhc6_ia **pia, struct packet *packet,$/;"	f	file:
dhc6_parse_prefixes	dhc6.c	/^dhc6_parse_prefixes(struct dhc6_addr **ppfx, struct packet *packet,$/;"	f	file:
dhc6_rand	dhc6.c	/^dhc6_rand(TIME base)$/;"	f	file:
dhc6_reply_action	dhc6.c	/^dhc6_reply_action(struct client_state *client, isc_result_t *rvalp,$/;"	f	file:
dhc6_retrans_advance	dhc6.c	/^dhc6_retrans_advance(struct client_state *client)$/;"	f	file:
dhc6_retrans_init	dhc6.c	/^dhc6_retrans_init(struct client_state *client)$/;"	f	file:
dhc6_score_lease	dhc6.c	/^dhc6_score_lease(struct client_state *client, struct dhc6_lease *lease)$/;"	f	file:
dhc6_select_action	dhc6.c	/^dhc6_select_action(struct client_state *client, isc_result_t *rvalp,$/;"	f	file:
dhc6_stop_action	dhc6.c	/^dhc6_stop_action(struct client_state *client, isc_result_t *rvalp,$/;"	f	file:
dhc6_withdraw_lease	dhc6.c	/^dhc6_withdraw_lease(struct client_state *client)$/;"	f	file:
dhclient_interface_discovery_hook	dhclient.c	/^int dhclient_interface_discovery_hook (struct interface_info *tmp)$/;"	f
dhclient_interface_shutdown_hook	dhclient.c	/^int dhclient_interface_shutdown_hook (struct interface_info *interface)$/;"	f
dhclient_interface_startup_hook	dhclient.c	/^isc_result_t dhclient_interface_startup_hook (struct interface_info *interface)$/;"	f
dhclient_schedule_updates	dhclient.c	/^dhclient_schedule_updates(struct client_state *client,$/;"	f
dhcp	dhclient.c	/^void dhcp (packet)$/;"	f
dhcp_max_agent_option_packet_length	dhclient.c	/^int dhcp_max_agent_option_packet_length = 0;$/;"	v
dhcp_option_ev_name	dhclient.c	/^int dhcp_option_ev_name (buf, buflen, option)$/;"	f
dhcp_set_control_state	dhclient.c	/^isc_result_t dhcp_set_control_state (control_object_state_t oldstate,$/;"	f
dhcpack	dhclient.c	/^void dhcpack (packet)$/;"	f
dhcpnak	dhclient.c	/^void dhcpnak (packet)$/;"	f
dhcpoffer	dhclient.c	/^void dhcpoffer (packet)$/;"	f
dhcpv4_client_assignments	dhclient.c	/^dhcpv4_client_assignments(void)$/;"	f
dhcpv6	dhclient.c	/^dhcpv6(struct packet *packet) {$/;"	f
dhcpv6_client_assignments	dhc6.c	/^dhcpv6_client_assignments(void)$/;"	f
do_confirm6	dhc6.c	/^do_confirm6(void *input)$/;"	f
do_depref	dhc6.c	/^do_depref(void *input)$/;"	f
do_expire	dhc6.c	/^do_expire(void *input)$/;"	f
do_info_request6	dhc6.c	/^do_info_request6(void *input)$/;"	f
do_init6	dhc6.c	/^do_init6(void *input)$/;"	f
do_refresh6	dhc6.c	/^do_refresh6(void *input)$/;"	f
do_release	dhclient.c	/^void do_release(client)$/;"	f
do_release6	dhc6.c	/^do_release6(void *input)$/;"	f	file:
do_select6	dhc6.c	/^do_select6(void *input)$/;"	f
duid_type	dhclient.c	/^int duid_type = 0;$/;"	v
elapsed_option	dhc6.c	/^struct option *elapsed_option = NULL;$/;"	v	typeref:struct:option
exit_with_hooks	scripts/bsdos	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/freebsd	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/linux	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/macos	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/netbsd	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/openbsd	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/openwrt	/^exit_with_hooks() {$/;"	f
exit_with_hooks	scripts/solaris	/^exit_with_hooks() {$/;"	f
find_addr	dhc6.c	/^find_addr(struct dhc6_addr *head, struct iaddr *address)$/;"	f	file:
find_class	dhclient.c	/^isc_result_t find_class (struct class **c,$/;"	f
find_ia	dhc6.c	/^find_ia(struct dhc6_ia *head, u_int16_t type, const char *id)$/;"	f	file:
find_pref	dhc6.c	/^find_pref(struct dhc6_addr *head, struct iaddr *prefix, u_int8_t plen)$/;"	f	file:
find_subnet	dhclient.c	/^int find_subnet (struct subnet **sp,$/;"	f
form_duid	dhc6.c	/^form_duid(struct data_string *duid, const char *file, int line)$/;"	f
giaddr	dhclient.c	/^struct in_addr giaddr;$/;"	v	typeref:struct:in_addr
go_daemon	dhclient.c	/^void go_daemon ()$/;"	f
ia_na_option	dhc6.c	/^struct option *ia_na_option = NULL;$/;"	v	typeref:struct:option
ia_pd_option	dhc6.c	/^struct option *ia_pd_option = NULL;$/;"	v	typeref:struct:option
ia_ta_option	dhc6.c	/^struct option *ia_ta_option = NULL;$/;"	v	typeref:struct:option
iaaddr_option	dhc6.c	/^struct option *iaaddr_option = NULL;$/;"	v	typeref:struct:option
iaddr_any	dhclient.c	/^struct iaddr iaddr_any = { 4, { 0, 0, 0, 0 } };$/;"	v	typeref:struct:iaddr
iaddr_broadcast	dhclient.c	/^struct iaddr iaddr_broadcast = { 4, { 255, 255, 255, 255 } };$/;"	v	typeref:struct:iaddr
iaprefix_option	dhc6.c	/^struct option *iaprefix_option = NULL;$/;"	v	typeref:struct:option
inaddr_any	dhclient.c	/^struct in_addr inaddr_any;$/;"	v	typeref:struct:in_addr
info_request_handler	dhc6.c	/^info_request_handler(struct packet *packet, struct client_state *client)$/;"	f
informed_handler	dhc6.c	/^informed_handler(struct packet *packet, struct client_state *client)$/;"	f
init_handler	dhc6.c	/^init_handler(struct packet *packet, struct client_state *client)$/;"	f
insert_lease	dhc6.c	/^insert_lease(struct dhc6_lease **head, struct dhc6_lease *new)$/;"	f	file:
interface_or_dummy	clparse.c	/^int interface_or_dummy (struct interface_info **pi, const char *name)$/;"	f
interfaces_requested	dhclient.c	/^int interfaces_requested = 0;$/;"	v
irt_option	dhc6.c	/^struct option *irt_option = NULL;$/;"	v	typeref:struct:option
leaseFile	dhclient.c	/^FILE *leaseFile = NULL;$/;"	v
leases_written	dhclient.c	/^int leases_written = 0;$/;"	v
local_port	dhclient.c	/^u_int16_t local_port = 0;$/;"	v
main	dhclient.c	/^main(int argc, char **argv) {$/;"	f
make_client6_options	dhc6.c	/^make_client6_options(struct client_state *client, struct option_state **op,$/;"	f	file:
make_client_config	clparse.c	/^void make_client_config (client, config)$/;"	f
make_client_options	dhclient.c	/^make_client_options(struct client_state *client, struct client_lease *lease,$/;"	f
make_client_state	clparse.c	/^void make_client_state (state)$/;"	f
make_decline	dhclient.c	/^void make_decline (client, lease)$/;"	f
make_discover	dhclient.c	/^void make_discover (client, lease)$/;"	f
make_release	dhclient.c	/^void make_release (client, lease)$/;"	f
make_request	dhclient.c	/^void make_request (client, lease)$/;"	f
make_resolv_conf	scripts/bsdos	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/freebsd	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/linux	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/macos	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/netbsd	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/openbsd	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/openwrt	/^make_resolv_conf() {$/;"	f
make_resolv_conf	scripts/solaris	/^make_resolv_conf() {$/;"	f
max_lease_time	dhclient.c	/^TIME max_lease_time = 86400; \/* 24 hours... *\/$/;"	v
message	dhclient.c	/^static const char message [] = "Internet Systems Consortium DHCP Client";$/;"	v	file:
mockup_relay	dhclient.c	/^char *mockup_relay = NULL;$/;"	v
no_daemon	dhclient.c	/^int no_daemon = 0;$/;"	v
no_pid_file	dhclient.c	/^isc_boolean_t no_pid_file = ISC_FALSE;$/;"	v
nowait	dhclient.c	/^int nowait = 0;$/;"	v
onetry	dhclient.c	/^int onetry = 0;$/;"	v
oro_option	dhc6.c	/^struct option *oro_option = NULL;$/;"	v	typeref:struct:option
packet_to_lease	dhclient.c	/^struct client_lease *packet_to_lease (packet, client)$/;"	f
parse_agent_information_option	dhclient.c	/^int parse_agent_information_option (packet, len, data)$/;"	f
parse_allow_deny	clparse.c	/^int parse_allow_deny (oc, cfile, flag)$/;"	f
parse_client6_ia_na_statement	clparse.c	/^parse_client6_ia_na_statement(struct parse *cfile)$/;"	f	file:
parse_client6_ia_pd_statement	clparse.c	/^parse_client6_ia_pd_statement(struct parse *cfile)$/;"	f	file:
parse_client6_ia_ta_statement	clparse.c	/^parse_client6_ia_ta_statement(struct parse *cfile)$/;"	f	file:
parse_client6_iaaddr_statement	clparse.c	/^parse_client6_iaaddr_statement(struct parse *cfile)$/;"	f	file:
parse_client6_iaprefix_statement	clparse.c	/^parse_client6_iaprefix_statement(struct parse *cfile)$/;"	f	file:
parse_client6_lease_statement	clparse.c	/^parse_client6_lease_statement(struct parse *cfile)$/;"	f	file:
parse_client_default_duid	clparse.c	/^parse_client_default_duid(struct parse *cfile)$/;"	f	file:
parse_client_lease_declaration	clparse.c	/^void parse_client_lease_declaration (cfile, lease, ipp, clientp)$/;"	f
parse_client_lease_statement	clparse.c	/^void parse_client_lease_statement (cfile, is_static)$/;"	f
parse_client_statement	clparse.c	/^void parse_client_statement (cfile, ip, config)$/;"	f
parse_interface_declaration	clparse.c	/^void parse_interface_declaration (cfile, outer_config, name)$/;"	f
parse_option_list	clparse.c	/^parse_option_list(struct parse *cfile, struct option ***list)$/;"	f
parse_reject_statement	clparse.c	/^void parse_reject_statement (cfile, config)$/;"	f
parse_string_list	clparse.c	/^void parse_string_list (cfile, lp, multiple)$/;"	f
path_dhclient_conf	dhclient.c	/^const char *path_dhclient_conf = _PATH_DHCLIENT_CONF;$/;"	v
path_dhclient_db	dhclient.c	/^const char *path_dhclient_db = NULL;$/;"	v
path_dhclient_pid	dhclient.c	/^const char *path_dhclient_pid = NULL;$/;"	v
path_dhclient_script	dhclient.c	/^char *path_dhclient_script = path_dhclient_script_array;$/;"	v
path_dhclient_script_array	dhclient.c	/^static char path_dhclient_script_array[] = _PATH_DHCLIENT_SCRIPT;$/;"	v	file:
quiet	dhclient.c	/^int quiet = 1;$/;"	v
rapid_commit_handler	dhc6.c	/^rapid_commit_handler(struct packet *packet, struct client_state *client)$/;"	f
read_client_conf	clparse.c	/^isc_result_t read_client_conf ()$/;"	f
read_client_conf_file	clparse.c	/^int read_client_conf_file (const char *name, struct interface_info *ip,$/;"	f
read_client_leases	clparse.c	/^void read_client_leases ()$/;"	f
refresh_info_request6	dhc6.c	/^refresh_info_request6(void *input)$/;"	f
remote_port	dhclient.c	/^u_int16_t remote_port = 0;$/;"	v
reply_handler	dhc6.c	/^reply_handler(struct packet *packet, struct client_state *client)$/;"	f
rewrite_client_leases	dhclient.c	/^void rewrite_client_leases ()$/;"	f
run_stateless	dhclient.c	/^void run_stateless(int exit_mode)$/;"	f
scriptFile	dhclient.c	/^FILE *scriptFile;$/;"	v
scriptName	dhclient.c	/^char scriptName [256];$/;"	v
script_go	dhclient.c	/^int script_go (client)$/;"	f
script_init	dhclient.c	/^void script_init (client, reason, medium)$/;"	f
script_write_params	dhclient.c	/^void script_write_params (client, prefix, lease)$/;"	f
script_write_params6	dhc6.c	/^script_write_params6(struct client_state *client, const char *prefix,$/;"	f	file:
send_decline	dhclient.c	/^void send_decline (cpp)$/;"	f
send_discover	dhclient.c	/^void send_discover (cpp)$/;"	f
send_release	dhclient.c	/^void send_release (cpp)$/;"	f
send_request	dhclient.c	/^void send_request (cpp)$/;"	f
shutdown_exit	dhclient.c	/^static void shutdown_exit (void *foo)$/;"	f	file:
sockaddr_broadcast	dhclient.c	/^struct sockaddr_in sockaddr_broadcast;$/;"	v	typeref:struct:sockaddr_in
start_bound	dhc6.c	/^start_bound(struct client_state *client)$/;"	f	file:
start_confirm6	dhc6.c	/^start_confirm6(struct client_state *client)$/;"	f
start_info_request6	dhc6.c	/^start_info_request6(struct client_state *client)$/;"	f
start_informed	dhc6.c	/^start_informed(struct client_state *client)$/;"	f	file:
start_init6	dhc6.c	/^start_init6(struct client_state *client)$/;"	f
start_rebind6	dhc6.c	/^start_rebind6(void *input)$/;"	f
start_release6	dhc6.c	/^start_release6(struct client_state *client)$/;"	f
start_renew6	dhc6.c	/^start_renew6(void *input)$/;"	f
start_selecting6	dhc6.c	/^start_selecting6(struct client_state *client)$/;"	f
state_bound	dhclient.c	/^void state_bound (cpp)$/;"	f
state_init	dhclient.c	/^void state_init (cpp)$/;"	f
state_panic	dhclient.c	/^void state_panic (cpp)$/;"	f
state_reboot	dhclient.c	/^void state_reboot (cpp)$/;"	f
state_selecting	dhclient.c	/^void state_selecting (cpp)$/;"	f
state_stop	dhclient.c	/^void state_stop (cpp)$/;"	f
stateless	dhclient.c	/^int stateless = 0;$/;"	v
status_log	dhc6.c	/^status_log(int code, const char *scope, const char *additional, int len)$/;"	f	file:
stopping_finished	dhc6.c	/^stopping_finished(void)$/;"	f	file:
top_level_config	clparse.c	/^struct client_config top_level_config;$/;"	v	typeref:struct:client_config
unbill_class	dhclient.c	/^int unbill_class (lease, class)$/;"	f
unconfigure6	dhc6.c	/^unconfigure6(struct client_state *client, const char *reason)$/;"	f
url	dhclient.c	/^static const char url [] = $/;"	v	file:
usage	dhclient.c	/^static void usage()$/;"	f	file:
valid_reply	dhc6.c	/^valid_reply(struct packet *packet, struct client_state *client)$/;"	f	file:
wanted_ia_na	dhclient.c	/^int wanted_ia_na = -1;		\/* the absolute value is the real one. *\/$/;"	v
wanted_ia_pd	dhclient.c	/^int wanted_ia_pd = 0;$/;"	v
wanted_ia_ta	dhclient.c	/^int wanted_ia_ta = 0;$/;"	v
write_client6_lease	dhclient.c	/^write_client6_lease(struct client_state *client, struct dhc6_lease *lease,$/;"	f
write_client_lease	dhclient.c	/^int write_client_lease (client, lease, rewrite, makesure)$/;"	f
write_client_pid_file	dhclient.c	/^void write_client_pid_file ()$/;"	f
write_duid	dhclient.c	/^write_duid(struct data_string *duid)$/;"	f	file:
write_host	dhclient.c	/^int write_host (host)$/;"	f
write_lease	dhclient.c	/^int write_lease (lease)$/;"	f
write_lease_option	dhclient.c	/^void write_lease_option (struct option_cache *oc,$/;"	f
write_options	dhclient.c	/^write_options(struct client_state *client, struct option_state *options,$/;"	f	file:
